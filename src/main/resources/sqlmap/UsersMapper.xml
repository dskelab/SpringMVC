<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.dao.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.springmvc.entity.Users" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="passWord" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="self_introduction" property="selfIntroduction" jdbcType="VARCHAR" />
    <result column="profile_picture" property="profilePicture" jdbcType="VARCHAR" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="register_location" property="registerLocation" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_name, password, age, sex, birthday, phone_number, email, self_introduction, profile_picture,
    register_time, register_location
  </sql>
  <!--添加用户-->
  <insert id="insertUser" parameterType="com.springmvc.entity.Users" >
    insert into users (user_id, user_name, password, age,
      sex, birthday, phone_number,
      email, self_introduction, profile_picture,
      register_time, register_location)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{passWord,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
      #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=TIMESTAMP}, #{phoneNumber,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{selfIntroduction,jdbcType=VARCHAR}, #{profilePicture,jdbcType=VARCHAR},
      #{registerTime,jdbcType=TIMESTAMP}, #{registerLocation,jdbcType=VARCHAR})
  </insert>
  <!--通过用户名删除用户-->
  <delete id="deleteUserByUserName" parameterType="java.lang.String" >
    delete from users
    where user_name = #{userName,jdbcType=VARCHAR}
  </delete>
  <!--通过用户名查询用户-->
  <select id="selectUserByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from users
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>
  <!--查询所有用户-->
  <select id="selectAllUsers" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
  </select>




  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.entity.Users" >
    update users
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="phoneNumber != null" >
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="selfIntroduction != null" >
        self_introduction = #{selfIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="profilePicture != null" >
        profile_picture = #{profilePicture,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerLocation != null" >
        register_location = #{registerLocation,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.entity.Users" >
    update users
    set user_name = #{userName,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      self_introduction = #{selfIntroduction,jdbcType=VARCHAR},
      profile_picture = #{profilePicture,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      register_location = #{registerLocation,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>